Questão 1)
	Inicialmente, recebi o erro: "NameError: name 'c' is not defined". Ao revisar o código, percebi que a variável responsável pela conexão com o servidor estava definida como "conn" e não como "c", então corrigi o código. Para obter o endereço IP da máquina do servidor, abri o prompt de comando do Windows e digitei "ipconfig", onde obtive o endereço IPv4 dela. Na máquina cliente, executei o arquivo, passando como parâmetro o endereço IP da máquina do servidor. Consegui receber as seguintes respostas do servidor: 
<__main__.MyService object at 0x0000026C64ADE810>
42
43

Questão 2)
	Ao executar o programa, me deparei com o erro: "AttributeError: 'Connection' object has no attribute 'get_question'". Após uma análise do código, identifiquei que a linha "print(conn.get_question)" estava tentando invocar um método inexistente no objeto de conexão no lado cliente. Para resolver isso, modifiquei a linha para "print(conn.root.get_question)", direcionando assim a chamada para o método declarado no lado do servidor. Embora tenha conseguido chamar o método do servidor, não conseguia acessá-lo e recebi o seguinte erro: "AttributeError: cannot access 'get_question'". Ao examinar o código do servidor, percebi que o método não estava exposto. Para corrigir isso, o alterei para ser exposto, adicionando o prefixo "exposed_" ao "get_question", resultando em "exposed_get_question". Após essa alteração, obtive a resposta desejada: "Qual é a cor do cavalo branco de Napoleão?""

Questão 3) Inicialmente, criei a função no arquivo do servidor que recebe um vetor como parâmetro e calcula a soma dos N números contidos neste vetor:
def exposed_get_sum(self, vet): 
        var_sum = 0
        for i in range(len(vet)):
            var_sum += vet[i]
        return var_sum
Em seguida, desenvolvi o código do cliente para criar um vetor de N números '1', estabelecer a conexão com o servidor e invocar a função get_sum() previamente implementada no lado do servidor.
def question3():
        if len(sys.argv) < 2:
            exit("Usage {} SERVER".format(sys.argv[0]))
        server = sys.argv[1]
        n = int(input('Digite o tamanho do vetor: '))
        vet = []
        for i in range(n):
            vet.append(1)
        conn = rpyc.connect(server,18861)
        print(f'A soma é: {conn.root.get_sum(vet)}')
Tudo ocorreu conforme o esperado; a soma foi realizada corretamente no lado do servidor e impressa no console do lado cliente.

Questão 4)Mostrar código

Questão 5)No meu deu timeout em maquinas diferentes. Testa no de vcs